일반적으로 CPU 기반의 개인 컴퓨터나 채점용 컴퓨터에서 연산 횟수가 5억을 넘어가는 경우:
 - C언어를 기준으로 통상 1~3초 가량의 시간이 소요.
 - Python 기준 통상 5~15초 가량의 시간이 소요.
 - PyPy의 경우 때때로 C언어 보다도 빠르게 동작하기도 함.
   (Python이 오래걸리면 PyPy, PyPy가 오래 걸린다면 Python)

O(N^3)의 알고리즘을 설계한 경우, N의 값이 5,000이 넘는다면 얼마나 걸릴까?
 - 코딩 테스트 문제에서 시간제한은 통상 1~5초 가량이다.
 - 문제에 명시되어 있지 않은 경우 대략 5초 정도라고 생각하고 문제 풀이.


* 요구 사항에 따라 적절한 알고리즘 설계하기
 - 문제에서 가장 먼저 확인해야 하는 내용은 시간제한(수행시간 요구사항)이다.
 - 시간제한이 1초인 문제를 만났을 때, 일반적인 기준
   N의 범위가 500 : 시간 복잡도가 O(N^3)인 알고리즘을 설계
   N의 범위가 2000 : 시간 복잡도가 O(N^2)인 알고리즘을 설계
   N의 범위가 100,000 : 시간 복잡도가 O(NlogN)인 알고리즘을 설계
   N의 범위가 10,000,000 : 시간 복잡도가 O(N)인 알고리즘을 설계

* 일반적인 알고리즘 문제 해결 과정
 1. 지문 읽기 및 컴퓨터적 사고
 2. 요구사항(복잡도) 분석
 3. 문제 해결을 위한 아이디어 찾기
 4. 소스코드 설계 및 코딩

* 일반적으로 대부분의 문제 출제자들은 핵심 아이디어를 캐치한다면,
  간결하게 소스코드를 작성할 수 있는 형태로 문제를 출제한다.